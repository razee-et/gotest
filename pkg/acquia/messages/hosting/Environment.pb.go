// Code generated by protoc-gen-go. DO NOT EDIT.
// source: acquia/messages/hosting/Environment.proto

package hosting

import (
	fmt "fmt"
	shared "github.com/acquia/message-broker-sdk-go/pkg/acquia/messages/shared"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ScheduledDbBackups int32

const (
	ScheduledDbBackups_NONE  ScheduledDbBackups = 0
	ScheduledDbBackups_DAILY ScheduledDbBackups = 1
)

var ScheduledDbBackups_name = map[int32]string{
	0: "NONE",
	1: "DAILY",
}

var ScheduledDbBackups_value = map[string]int32{
	"NONE":  0,
	"DAILY": 1,
}

func (x ScheduledDbBackups) String() string {
	return proto.EnumName(ScheduledDbBackups_name, int32(x))
}

func (ScheduledDbBackups) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c320f7e6e4b47852, []int{0}
}

type TaskStatus int32

const (
	TaskStatus_RECEIVED    TaskStatus = 0
	TaskStatus_IN_PROGRESS TaskStatus = 1
	TaskStatus_FAILED      TaskStatus = 2
	TaskStatus_COMPLETE    TaskStatus = 3
)

var TaskStatus_name = map[int32]string{
	0: "RECEIVED",
	1: "IN_PROGRESS",
	2: "FAILED",
	3: "COMPLETE",
}

var TaskStatus_value = map[string]int32{
	"RECEIVED":    0,
	"IN_PROGRESS": 1,
	"FAILED":      2,
	"COMPLETE":    3,
}

func (x TaskStatus) String() string {
	return proto.EnumName(TaskStatus_name, int32(x))
}

func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c320f7e6e4b47852, []int{1}
}

type PHPInfo struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	PhpMemoryLimit       int32    `protobuf:"varint,2,opt,name=phpMemoryLimit,proto3" json:"phpMemoryLimit,omitempty"`
	OpcacheMemoryLimit   int32    `protobuf:"varint,3,opt,name=opcacheMemoryLimit,proto3" json:"opcacheMemoryLimit,omitempty"`
	ApcMemoryLimit       int32    `protobuf:"varint,4,opt,name=apcMemoryLimit,proto3" json:"apcMemoryLimit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PHPInfo) Reset()         { *m = PHPInfo{} }
func (m *PHPInfo) String() string { return proto.CompactTextString(m) }
func (*PHPInfo) ProtoMessage()    {}
func (*PHPInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c320f7e6e4b47852, []int{0}
}

func (m *PHPInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PHPInfo.Unmarshal(m, b)
}
func (m *PHPInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PHPInfo.Marshal(b, m, deterministic)
}
func (m *PHPInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PHPInfo.Merge(m, src)
}
func (m *PHPInfo) XXX_Size() int {
	return xxx_messageInfo_PHPInfo.Size(m)
}
func (m *PHPInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PHPInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PHPInfo proto.InternalMessageInfo

func (m *PHPInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *PHPInfo) GetPhpMemoryLimit() int32 {
	if m != nil {
		return m.PhpMemoryLimit
	}
	return 0
}

func (m *PHPInfo) GetOpcacheMemoryLimit() int32 {
	if m != nil {
		return m.OpcacheMemoryLimit
	}
	return 0
}

func (m *PHPInfo) GetApcMemoryLimit() int32 {
	if m != nil {
		return m.ApcMemoryLimit
	}
	return 0
}

type GitInfo struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GitInfo) Reset()         { *m = GitInfo{} }
func (m *GitInfo) String() string { return proto.CompactTextString(m) }
func (*GitInfo) ProtoMessage()    {}
func (*GitInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c320f7e6e4b47852, []int{1}
}

func (m *GitInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GitInfo.Unmarshal(m, b)
}
func (m *GitInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GitInfo.Marshal(b, m, deterministic)
}
func (m *GitInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GitInfo.Merge(m, src)
}
func (m *GitInfo) XXX_Size() int {
	return xxx_messageInfo_GitInfo.Size(m)
}
func (m *GitInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GitInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GitInfo proto.InternalMessageInfo

func (m *GitInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type CreateEnvironment struct {
	Header               *shared.Header     `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	AppUUID              string             `protobuf:"bytes,2,opt,name=appUUID,proto3" json:"appUUID,omitempty"`
	EnvUUID              string             `protobuf:"bytes,3,opt,name=envUUID,proto3" json:"envUUID,omitempty"`
	EnvLabel             string             `protobuf:"bytes,4,opt,name=envLabel,proto3" json:"envLabel,omitempty"`
	EnvName              string             `protobuf:"bytes,5,opt,name=envName,proto3" json:"envName,omitempty"`
	Config               *EnvironmentConfig `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	GitInfo              *GitInfo           `protobuf:"bytes,7,opt,name=gitInfo,proto3" json:"gitInfo,omitempty"`
	GitRef               string             `protobuf:"bytes,8,opt,name=gitRef,proto3" json:"gitRef,omitempty"`
	Domains              []string           `protobuf:"bytes,9,rep,name=domains,proto3" json:"domains,omitempty"`
	Region               string             `protobuf:"bytes,10,opt,name=region,proto3" json:"region,omitempty"`
	PhpInfo              *PHPInfo           `protobuf:"bytes,11,opt,name=phpInfo,proto3" json:"phpInfo,omitempty"`
	DbBackupConfig       *DbBackupConfig    `protobuf:"bytes,12,opt,name=dbBackupConfig,proto3" json:"dbBackupConfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateEnvironment) Reset()         { *m = CreateEnvironment{} }
func (m *CreateEnvironment) String() string { return proto.CompactTextString(m) }
func (*CreateEnvironment) ProtoMessage()    {}
func (*CreateEnvironment) Descriptor() ([]byte, []int) {
	return fileDescriptor_c320f7e6e4b47852, []int{2}
}

func (m *CreateEnvironment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEnvironment.Unmarshal(m, b)
}
func (m *CreateEnvironment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEnvironment.Marshal(b, m, deterministic)
}
func (m *CreateEnvironment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEnvironment.Merge(m, src)
}
func (m *CreateEnvironment) XXX_Size() int {
	return xxx_messageInfo_CreateEnvironment.Size(m)
}
func (m *CreateEnvironment) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEnvironment.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEnvironment proto.InternalMessageInfo

func (m *CreateEnvironment) GetHeader() *shared.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateEnvironment) GetAppUUID() string {
	if m != nil {
		return m.AppUUID
	}
	return ""
}

func (m *CreateEnvironment) GetEnvUUID() string {
	if m != nil {
		return m.EnvUUID
	}
	return ""
}

func (m *CreateEnvironment) GetEnvLabel() string {
	if m != nil {
		return m.EnvLabel
	}
	return ""
}

func (m *CreateEnvironment) GetEnvName() string {
	if m != nil {
		return m.EnvName
	}
	return ""
}

func (m *CreateEnvironment) GetConfig() *EnvironmentConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *CreateEnvironment) GetGitInfo() *GitInfo {
	if m != nil {
		return m.GitInfo
	}
	return nil
}

func (m *CreateEnvironment) GetGitRef() string {
	if m != nil {
		return m.GitRef
	}
	return ""
}

func (m *CreateEnvironment) GetDomains() []string {
	if m != nil {
		return m.Domains
	}
	return nil
}

func (m *CreateEnvironment) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateEnvironment) GetPhpInfo() *PHPInfo {
	if m != nil {
		return m.PhpInfo
	}
	return nil
}

func (m *CreateEnvironment) GetDbBackupConfig() *DbBackupConfig {
	if m != nil {
		return m.DbBackupConfig
	}
	return nil
}

type CreateEnvironmentResponse struct {
	Header               *shared.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	EnvUUID              string         `protobuf:"bytes,2,opt,name=envUUID,proto3" json:"envUUID,omitempty"`
	Status               string         `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateEnvironmentResponse) Reset()         { *m = CreateEnvironmentResponse{} }
func (m *CreateEnvironmentResponse) String() string { return proto.CompactTextString(m) }
func (*CreateEnvironmentResponse) ProtoMessage()    {}
func (*CreateEnvironmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c320f7e6e4b47852, []int{3}
}

func (m *CreateEnvironmentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEnvironmentResponse.Unmarshal(m, b)
}
func (m *CreateEnvironmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEnvironmentResponse.Marshal(b, m, deterministic)
}
func (m *CreateEnvironmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEnvironmentResponse.Merge(m, src)
}
func (m *CreateEnvironmentResponse) XXX_Size() int {
	return xxx_messageInfo_CreateEnvironmentResponse.Size(m)
}
func (m *CreateEnvironmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEnvironmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEnvironmentResponse proto.InternalMessageInfo

func (m *CreateEnvironmentResponse) GetHeader() *shared.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateEnvironmentResponse) GetEnvUUID() string {
	if m != nil {
		return m.EnvUUID
	}
	return ""
}

func (m *CreateEnvironmentResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ChangeLanguageVersion struct {
	Header *shared.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Both of these fields should be enums.
	LanguageName         string   `protobuf:"bytes,2,opt,name=languageName,proto3" json:"languageName,omitempty"`
	LanguageVersion      string   `protobuf:"bytes,3,opt,name=languageVersion,proto3" json:"languageVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeLanguageVersion) Reset()         { *m = ChangeLanguageVersion{} }
func (m *ChangeLanguageVersion) String() string { return proto.CompactTextString(m) }
func (*ChangeLanguageVersion) ProtoMessage()    {}
func (*ChangeLanguageVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_c320f7e6e4b47852, []int{4}
}

func (m *ChangeLanguageVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeLanguageVersion.Unmarshal(m, b)
}
func (m *ChangeLanguageVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeLanguageVersion.Marshal(b, m, deterministic)
}
func (m *ChangeLanguageVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeLanguageVersion.Merge(m, src)
}
func (m *ChangeLanguageVersion) XXX_Size() int {
	return xxx_messageInfo_ChangeLanguageVersion.Size(m)
}
func (m *ChangeLanguageVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeLanguageVersion.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeLanguageVersion proto.InternalMessageInfo

func (m *ChangeLanguageVersion) GetHeader() *shared.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ChangeLanguageVersion) GetLanguageName() string {
	if m != nil {
		return m.LanguageName
	}
	return ""
}

func (m *ChangeLanguageVersion) GetLanguageVersion() string {
	if m != nil {
		return m.LanguageVersion
	}
	return ""
}

// Entire desired state of environment config.
type EnvironmentConfig struct {
	Header *shared.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Support whatever the k8s code understands now.
	MaxExecutionTime     int32    `protobuf:"varint,2,opt,name=maxExecutionTime,proto3" json:"maxExecutionTime,omitempty"`
	Sendmail             string   `protobuf:"bytes,3,opt,name=sendmail,proto3" json:"sendmail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnvironmentConfig) Reset()         { *m = EnvironmentConfig{} }
func (m *EnvironmentConfig) String() string { return proto.CompactTextString(m) }
func (*EnvironmentConfig) ProtoMessage()    {}
func (*EnvironmentConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c320f7e6e4b47852, []int{5}
}

func (m *EnvironmentConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvironmentConfig.Unmarshal(m, b)
}
func (m *EnvironmentConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvironmentConfig.Marshal(b, m, deterministic)
}
func (m *EnvironmentConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvironmentConfig.Merge(m, src)
}
func (m *EnvironmentConfig) XXX_Size() int {
	return xxx_messageInfo_EnvironmentConfig.Size(m)
}
func (m *EnvironmentConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvironmentConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EnvironmentConfig proto.InternalMessageInfo

func (m *EnvironmentConfig) GetHeader() *shared.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *EnvironmentConfig) GetMaxExecutionTime() int32 {
	if m != nil {
		return m.MaxExecutionTime
	}
	return 0
}

func (m *EnvironmentConfig) GetSendmail() string {
	if m != nil {
		return m.Sendmail
	}
	return ""
}

type DbBackupConfig struct {
	Schedule             ScheduledDbBackups `protobuf:"varint,1,opt,name=schedule,proto3,enum=acquia.messages.hosting.ScheduledDbBackups" json:"schedule,omitempty"`
	BackupsToRetain      int32              `protobuf:"varint,2,opt,name=backupsToRetain,proto3" json:"backupsToRetain,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DbBackupConfig) Reset()         { *m = DbBackupConfig{} }
func (m *DbBackupConfig) String() string { return proto.CompactTextString(m) }
func (*DbBackupConfig) ProtoMessage()    {}
func (*DbBackupConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c320f7e6e4b47852, []int{6}
}

func (m *DbBackupConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DbBackupConfig.Unmarshal(m, b)
}
func (m *DbBackupConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DbBackupConfig.Marshal(b, m, deterministic)
}
func (m *DbBackupConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbBackupConfig.Merge(m, src)
}
func (m *DbBackupConfig) XXX_Size() int {
	return xxx_messageInfo_DbBackupConfig.Size(m)
}
func (m *DbBackupConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DbBackupConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DbBackupConfig proto.InternalMessageInfo

func (m *DbBackupConfig) GetSchedule() ScheduledDbBackups {
	if m != nil {
		return m.Schedule
	}
	return ScheduledDbBackups_NONE
}

func (m *DbBackupConfig) GetBackupsToRetain() int32 {
	if m != nil {
		return m.BackupsToRetain
	}
	return 0
}

type DeployCode struct {
	Header               *shared.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	EnvUUID              string         `protobuf:"bytes,2,opt,name=envUUID,proto3" json:"envUUID,omitempty"`
	GitRef               string         `protobuf:"bytes,3,opt,name=gitRef,proto3" json:"gitRef,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeployCode) Reset()         { *m = DeployCode{} }
func (m *DeployCode) String() string { return proto.CompactTextString(m) }
func (*DeployCode) ProtoMessage()    {}
func (*DeployCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_c320f7e6e4b47852, []int{7}
}

func (m *DeployCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployCode.Unmarshal(m, b)
}
func (m *DeployCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployCode.Marshal(b, m, deterministic)
}
func (m *DeployCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployCode.Merge(m, src)
}
func (m *DeployCode) XXX_Size() int {
	return xxx_messageInfo_DeployCode.Size(m)
}
func (m *DeployCode) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployCode.DiscardUnknown(m)
}

var xxx_messageInfo_DeployCode proto.InternalMessageInfo

func (m *DeployCode) GetHeader() *shared.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeployCode) GetEnvUUID() string {
	if m != nil {
		return m.EnvUUID
	}
	return ""
}

func (m *DeployCode) GetGitRef() string {
	if m != nil {
		return m.GitRef
	}
	return ""
}

type UpdateFollowedBranch struct {
	Header  *shared.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	EnvUUID string         `protobuf:"bytes,2,opt,name=envUUID,proto3" json:"envUUID,omitempty"`
	// Git ref that received a push.
	GitRef string `protobuf:"bytes,3,opt,name=gitRef,proto3" json:"gitRef,omitempty"`
	// Tip of the push to ref.
	GitSha               string   `protobuf:"bytes,4,opt,name=gitSha,proto3" json:"gitSha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateFollowedBranch) Reset()         { *m = UpdateFollowedBranch{} }
func (m *UpdateFollowedBranch) String() string { return proto.CompactTextString(m) }
func (*UpdateFollowedBranch) ProtoMessage()    {}
func (*UpdateFollowedBranch) Descriptor() ([]byte, []int) {
	return fileDescriptor_c320f7e6e4b47852, []int{8}
}

func (m *UpdateFollowedBranch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateFollowedBranch.Unmarshal(m, b)
}
func (m *UpdateFollowedBranch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateFollowedBranch.Marshal(b, m, deterministic)
}
func (m *UpdateFollowedBranch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateFollowedBranch.Merge(m, src)
}
func (m *UpdateFollowedBranch) XXX_Size() int {
	return xxx_messageInfo_UpdateFollowedBranch.Size(m)
}
func (m *UpdateFollowedBranch) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateFollowedBranch.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateFollowedBranch proto.InternalMessageInfo

func (m *UpdateFollowedBranch) GetHeader() *shared.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UpdateFollowedBranch) GetEnvUUID() string {
	if m != nil {
		return m.EnvUUID
	}
	return ""
}

func (m *UpdateFollowedBranch) GetGitRef() string {
	if m != nil {
		return m.GitRef
	}
	return ""
}

func (m *UpdateFollowedBranch) GetGitSha() string {
	if m != nil {
		return m.GitSha
	}
	return ""
}

type TaskProgress struct {
	Header               *shared.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	LogMessages          []string       `protobuf:"bytes,2,rep,name=logMessages,proto3" json:"logMessages,omitempty"`
	Status               TaskStatus     `protobuf:"varint,3,opt,name=status,proto3,enum=acquia.messages.hosting.TaskStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TaskProgress) Reset()         { *m = TaskProgress{} }
func (m *TaskProgress) String() string { return proto.CompactTextString(m) }
func (*TaskProgress) ProtoMessage()    {}
func (*TaskProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_c320f7e6e4b47852, []int{9}
}

func (m *TaskProgress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskProgress.Unmarshal(m, b)
}
func (m *TaskProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskProgress.Marshal(b, m, deterministic)
}
func (m *TaskProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskProgress.Merge(m, src)
}
func (m *TaskProgress) XXX_Size() int {
	return xxx_messageInfo_TaskProgress.Size(m)
}
func (m *TaskProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskProgress.DiscardUnknown(m)
}

var xxx_messageInfo_TaskProgress proto.InternalMessageInfo

func (m *TaskProgress) GetHeader() *shared.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *TaskProgress) GetLogMessages() []string {
	if m != nil {
		return m.LogMessages
	}
	return nil
}

func (m *TaskProgress) GetStatus() TaskStatus {
	if m != nil {
		return m.Status
	}
	return TaskStatus_RECEIVED
}

func init() {
	proto.RegisterEnum("acquia.messages.hosting.ScheduledDbBackups", ScheduledDbBackups_name, ScheduledDbBackups_value)
	proto.RegisterEnum("acquia.messages.hosting.TaskStatus", TaskStatus_name, TaskStatus_value)
	proto.RegisterType((*PHPInfo)(nil), "acquia.messages.hosting.PHPInfo")
	proto.RegisterType((*GitInfo)(nil), "acquia.messages.hosting.GitInfo")
	proto.RegisterType((*CreateEnvironment)(nil), "acquia.messages.hosting.CreateEnvironment")
	proto.RegisterType((*CreateEnvironmentResponse)(nil), "acquia.messages.hosting.CreateEnvironmentResponse")
	proto.RegisterType((*ChangeLanguageVersion)(nil), "acquia.messages.hosting.ChangeLanguageVersion")
	proto.RegisterType((*EnvironmentConfig)(nil), "acquia.messages.hosting.EnvironmentConfig")
	proto.RegisterType((*DbBackupConfig)(nil), "acquia.messages.hosting.DbBackupConfig")
	proto.RegisterType((*DeployCode)(nil), "acquia.messages.hosting.DeployCode")
	proto.RegisterType((*UpdateFollowedBranch)(nil), "acquia.messages.hosting.UpdateFollowedBranch")
	proto.RegisterType((*TaskProgress)(nil), "acquia.messages.hosting.TaskProgress")
}

func init() {
	proto.RegisterFile("acquia/messages/hosting/Environment.proto", fileDescriptor_c320f7e6e4b47852)
}

var fileDescriptor_c320f7e6e4b47852 = []byte{
	// 791 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xcf, 0x8f, 0xdb, 0x44,
	0x14, 0xae, 0x37, 0xbb, 0xf9, 0xf1, 0x12, 0xa5, 0xee, 0x08, 0x8a, 0x29, 0x12, 0x8a, 0x5c, 0x09,
	0xb6, 0x41, 0xeb, 0x48, 0x8b, 0xc4, 0x01, 0x4e, 0x4d, 0xe2, 0x6e, 0x23, 0x65, 0x93, 0x68, 0x92,
	0xad, 0x04, 0x17, 0x34, 0xb1, 0x67, 0x6d, 0x2b, 0xf6, 0x8c, 0xf1, 0xd8, 0xa1, 0x3d, 0x23, 0x6e,
	0xdc, 0xb8, 0x70, 0xe1, 0x84, 0xf8, 0x3f, 0x91, 0xc7, 0xe3, 0x10, 0x27, 0x44, 0x48, 0x8b, 0xe8,
	0x69, 0xf7, 0x7b, 0xf3, 0x7d, 0x2f, 0xdf, 0xbc, 0x1f, 0x1e, 0x78, 0x41, 0x9c, 0x1f, 0xb2, 0x80,
	0x0c, 0x22, 0x2a, 0x04, 0xf1, 0xa8, 0x18, 0xf8, 0x5c, 0xa4, 0x01, 0xf3, 0x06, 0x36, 0xdb, 0x06,
	0x09, 0x67, 0x11, 0x65, 0xa9, 0x15, 0x27, 0x3c, 0xe5, 0xe8, 0xa3, 0x82, 0x6a, 0x95, 0x54, 0x4b,
	0x51, 0x9f, 0x3d, 0x3f, 0xcc, 0x21, 0x7c, 0x92, 0x50, 0x57, 0xfd, 0x29, 0xd4, 0xe6, 0x1f, 0x1a,
	0x34, 0x16, 0xaf, 0x17, 0x13, 0x76, 0xcf, 0x91, 0x01, 0x8d, 0x2d, 0x4d, 0x44, 0xc0, 0x99, 0xa1,
	0xf5, 0xb4, 0xcb, 0x16, 0x2e, 0x21, 0xfa, 0x0c, 0xba, 0xb1, 0x1f, 0xdf, 0xd2, 0x88, 0x27, 0xef,
	0xa6, 0x41, 0x14, 0xa4, 0xc6, 0x59, 0x4f, 0xbb, 0xbc, 0xc0, 0x07, 0x51, 0x64, 0x01, 0xe2, 0xb1,
	0x43, 0x1c, 0x9f, 0xee, 0x73, 0x6b, 0x92, 0xfb, 0x0f, 0x27, 0x79, 0x5e, 0x12, 0x3b, 0xfb, 0xdc,
	0xf3, 0x22, 0x6f, 0x35, 0x6a, 0x7e, 0x02, 0x8d, 0x9b, 0x20, 0x95, 0x26, 0x75, 0xa8, 0x65, 0x49,
	0xa8, 0x0c, 0xe6, 0xff, 0x9a, 0xbf, 0x9c, 0xc3, 0x93, 0x51, 0x42, 0x49, 0x4a, 0xf7, 0x8a, 0x83,
	0xbe, 0x82, 0xba, 0x4f, 0x89, 0x4b, 0x13, 0x49, 0x6d, 0x5f, 0x7f, 0x6a, 0x1d, 0xd6, 0x49, 0xd5,
	0xe1, 0xb5, 0x64, 0x61, 0xc5, 0xce, 0x8b, 0x40, 0xe2, 0xf8, 0xee, 0x6e, 0x32, 0x96, 0x77, 0x6c,
	0xe1, 0x12, 0xe6, 0x27, 0x94, 0x6d, 0xe5, 0x49, 0xad, 0x38, 0x51, 0x10, 0x3d, 0x83, 0x26, 0x65,
	0xdb, 0x29, 0x59, 0xd3, 0x50, 0x5e, 0xa0, 0x85, 0x77, 0x58, 0xa9, 0x66, 0x24, 0xa2, 0xc6, 0xc5,
	0x4e, 0x95, 0x43, 0x34, 0x84, 0xba, 0xc3, 0xd9, 0x7d, 0xe0, 0x19, 0x75, 0xe9, 0xb0, 0x6f, 0x9d,
	0xe8, 0xa4, 0xb5, 0x77, 0xaf, 0x91, 0x54, 0x60, 0xa5, 0x44, 0x5f, 0x43, 0xc3, 0x2b, 0x0a, 0x63,
	0x34, 0x64, 0x92, 0xde, 0xc9, 0x24, 0xaa, 0x80, 0xb8, 0x14, 0xa0, 0xa7, 0x50, 0xf7, 0x82, 0x14,
	0xd3, 0x7b, 0xa3, 0x29, 0x8d, 0x29, 0x94, 0x3b, 0x76, 0x79, 0x44, 0x02, 0x26, 0x8c, 0x56, 0xaf,
	0x96, 0x3b, 0x56, 0x30, 0x57, 0x24, 0xd4, 0xcb, 0xe7, 0x03, 0x0a, 0x45, 0x81, 0x72, 0x17, 0xb1,
	0x1f, 0x4b, 0x17, 0xed, 0x7f, 0x71, 0xa1, 0x66, 0x0d, 0x97, 0x02, 0x34, 0x87, 0xae, 0xbb, 0x1e,
	0x12, 0x67, 0x93, 0xc5, 0xc5, 0xdd, 0x8c, 0x8e, 0x4c, 0xf1, 0xf9, 0xc9, 0x14, 0xe3, 0x0a, 0x1d,
	0x1f, 0xc8, 0xcd, 0x9f, 0x35, 0xf8, 0xf8, 0x68, 0x1c, 0x30, 0x15, 0x31, 0x67, 0x82, 0xfe, 0x97,
	0xb1, 0x28, 0x9b, 0x7f, 0x56, 0x6d, 0xfe, 0x53, 0xa8, 0x8b, 0x94, 0xa4, 0x99, 0x50, 0x53, 0xa1,
	0x90, 0xf9, 0xbb, 0x06, 0x1f, 0x8e, 0x7c, 0xc2, 0x3c, 0x3a, 0x25, 0xcc, 0xcb, 0x88, 0x47, 0xdf,
	0xa8, 0x6d, 0x7a, 0xa8, 0x07, 0x13, 0x3a, 0xa1, 0x4a, 0x25, 0xe7, 0xa9, 0x30, 0x52, 0x89, 0xa1,
	0x4b, 0x78, 0x1c, 0x56, 0x7f, 0x4e, 0xd9, 0x3a, 0x0c, 0x9b, 0xbf, 0x6a, 0xf0, 0xe4, 0x68, 0xb0,
	0x1e, 0xec, 0xad, 0x0f, 0x7a, 0x44, 0xde, 0xda, 0x6f, 0xa9, 0x93, 0xa5, 0x01, 0x67, 0xab, 0x40,
	0xf9, 0xbb, 0xc0, 0x47, 0xf1, 0x7c, 0x5d, 0x04, 0x65, 0x6e, 0x44, 0x82, 0x50, 0x99, 0xdb, 0x61,
	0xf3, 0x27, 0x0d, 0xba, 0xd5, 0x06, 0xa3, 0x1b, 0x68, 0x0a, 0xc7, 0xa7, 0x6e, 0x16, 0x52, 0x69,
	0xaa, 0x7b, 0xfd, 0xc5, 0xc9, 0xd9, 0x58, 0x2a, 0xa2, 0x5b, 0xe6, 0x10, 0x78, 0x27, 0xce, 0x6b,
	0xb3, 0x2e, 0x82, 0x2b, 0x8e, 0x69, 0x4a, 0x02, 0xa6, 0x2c, 0x1e, 0x86, 0xcd, 0x2d, 0xc0, 0x98,
	0xc6, 0x21, 0x7f, 0x37, 0xe2, 0xee, 0xff, 0x34, 0x33, 0x6a, 0xf5, 0x6a, 0xfb, 0xab, 0x67, 0xfe,
	0xa6, 0xc1, 0x07, 0x77, 0xb1, 0x4b, 0x52, 0xfa, 0x8a, 0x87, 0x21, 0xff, 0x91, 0xba, 0xc3, 0x84,
	0x30, 0xc7, 0x7f, 0x7f, 0x16, 0x54, 0x7c, 0xe9, 0x13, 0xf5, 0x25, 0x53, 0xc8, 0xfc, 0x53, 0x83,
	0xce, 0x8a, 0x88, 0xcd, 0x22, 0xe1, 0x5e, 0x42, 0x85, 0x78, 0xb0, 0xa5, 0x1e, 0xb4, 0x43, 0xee,
	0xdd, 0x2a, 0x92, 0x71, 0x26, 0x3f, 0x31, 0xfb, 0x21, 0xf4, 0x4d, 0x65, 0xa3, 0xba, 0xd7, 0xcf,
	0x4f, 0xb6, 0x3b, 0x37, 0xb4, 0x94, 0xd4, 0x72, 0xed, 0xfa, 0x2f, 0x00, 0x1d, 0x0f, 0x01, 0x6a,
	0xc2, 0xf9, 0x6c, 0x3e, 0xb3, 0xf5, 0x47, 0xa8, 0x05, 0x17, 0xe3, 0x97, 0x93, 0xe9, 0xb7, 0xba,
	0xd6, 0xb7, 0x01, 0xfe, 0x4e, 0x80, 0x3a, 0xd0, 0xc4, 0xf6, 0xc8, 0x9e, 0xbc, 0xb1, 0xc7, 0xfa,
	0x23, 0xf4, 0x18, 0xda, 0x93, 0xd9, 0xf7, 0x0b, 0x3c, 0xbf, 0xc1, 0xf6, 0x72, 0xa9, 0x6b, 0x08,
	0xa0, 0xfe, 0xea, 0xe5, 0x64, 0x6a, 0x8f, 0xf5, 0xb3, 0x9c, 0x3a, 0x9a, 0xdf, 0x2e, 0xa6, 0xf6,
	0xca, 0xd6, 0x6b, 0x43, 0xfb, 0xbb, 0x91, 0x17, 0xa4, 0x7e, 0xb6, 0xb6, 0x1c, 0x1e, 0x0d, 0xaa,
	0x8f, 0xee, 0xd5, 0x3a, 0xe1, 0x1b, 0x9a, 0x5c, 0x09, 0x77, 0x73, 0xe5, 0xf1, 0x41, 0xbc, 0xf1,
	0x06, 0x27, 0x5e, 0xf6, 0x75, 0x5d, 0x3e, 0xc8, 0x5f, 0xfe, 0x15, 0x00, 0x00, 0xff, 0xff, 0xd2,
	0x74, 0x08, 0x8b, 0xfb, 0x07, 0x00, 0x00,
}
